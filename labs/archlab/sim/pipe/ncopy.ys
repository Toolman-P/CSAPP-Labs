#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
  irmovq $4,%r12 
  irmovq $1,%r13
	xorq %rax,%rax		# count = 0;
  rrmovq %rdx,%r14
  subq %r12,%r14 #len<=4?
  jle Small #jump to small loop
  
Big:
  mrmovq (%rdi),%r8	# read val from src...
  mrmovq 8(%rdi),%r9
  mrmovq 16(%rdi),%r10
  mrmovq 24(%rdi),%r11

	rmmovq %r8,(%rsi)	# ...and store it to dst
  rmmovq %r9,8(%rsi)
  rmmovq %r10,16(%rsi)
  rmmovq %r11,24(%rsi)
test1:
	andq %r8,%r8		# val <= 0?
	jle test2		# if so, goto Npos:
	addq %r13,%rax		# count++
test2:
  andq %r9,%r9
  jle test3
  addq %r13,%rax
test3:
  andq %r10,%r10
  jle test4
  addq %r13,%rax
test4:
  andq %r11,%r11
  jle N1pos
	addq %r13,%rax		# count++
N1pos:
	subq %r12, %rdx		# len-=4
	iaddq $32, %rdi		# src++
	iaddq $32, %rsi		# dst++
  rrmovq %rdx,%r14
  subq %r12,%r14
	jg Big			# if so, goto Loop:
Small:
  andq %rdx,%rdx
  jle Done
  mrmovq (%rdi),%r8
  rmmovq %r8,(%rsi)
  andq %r8,%r8
  jle N2pos
  addq %r13,%rax
N2pos:
  subq %r13,%rdx
  iaddq $8,%rdi
  iaddq $8,%rsi
  andq %rdx,%rdx
  jg Small
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
